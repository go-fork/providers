name: Generate Documentation

on:
  push:
    branches: [ main ]
    paths:
      - '**.go'
      - '**/doc.go'
      - 'go.mod'
      - '.github/workflows/docs.yml'
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  generate-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.x'
          cache: true

      - name: Install godoc
        run: go install golang.org/x/tools/cmd/godoc@latest

      - name: Install godoc2md
        run: go install github.com/davecheney/godoc2md@latest

      - name: Generate documentation
        run: |
          mkdir -p docs
          
          # Generate module-level documentation
          for dir in cache config http log middleware; do
            if [ -d "$dir" ]; then
              echo "Generating docs for $dir"
              
              # Create directory for module docs
              mkdir -p docs/$dir
              
              # Generate package documentation
              godoc2md github.com/go-fork/providers/$dir > docs/$dir/README.md
              
              # Generate docs for subpackages
              find $dir -type d -not -path "$dir" | while read subdir; do
                if [ -f "$subdir/doc.go" ] || ls $subdir/*.go >/dev/null 2>&1; then
                  pkg_path=${subdir#./}
                  mkdir -p docs/$pkg_path
                  godoc2md github.com/go-fork/providers/$pkg_path > docs/$pkg_path/README.md
                fi
              done
            fi
          done
          
          # Generate index page
          cat > docs/index.md << EOF
          # Go-Fork Providers Documentation
          
          This documentation is automatically generated from the Go source code and doc comments.
          
          ## Modules
          
          EOF
          
          for dir in cache config http log middleware; do
            if [ -d "$dir" ]; then
              echo "- [$dir]($dir/README.md)" >> docs/index.md
            fi
          done

      - name: Commit and push changes
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          git add docs/
          
          # Only commit if there are changes
          if git diff --staged --quiet; then
            echo "No changes to commit"
            exit 0
          fi
          
          git commit -m "docs: update generated documentation [skip ci]"
          git push
