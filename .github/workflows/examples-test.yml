name: Test Examples

on:
  push:
    branches: [ main ]
    paths:
      - 'examples/**'
      - '**.go'
      - 'go.mod'
  pull_request:
    branches: [ main ]
    paths:
      - 'examples/**'
      - '**.go'
      - 'go.mod'
  workflow_dispatch:

jobs:
  verify-examples:
    name: Verify Examples
    runs-on: ubuntu-latest
    services:
      # Add Redis service for cache examples
      redis:
        image: redis:alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.x'
          cache: true
      
      - name: Prepare examples environment
        run: |
          # Create necessary directories for example outputs
          mkdir -p examples/output
          mkdir -p examples/tmp
      
      - name: Compile all examples
        run: |
          # Find all example directories
          EXAMPLE_DIRS=$(find examples -type f -name "*.go" | xargs dirname | sort -u)
          
          echo "Found example directories:"
          echo "$EXAMPLE_DIRS"
          
          # Test compilation of all examples
          for dir in $EXAMPLE_DIRS; do
            echo "Compiling example in $dir"
            cd "$dir"
            
            # Skip if no go.mod file and not in the root examples directory
            if [ ! -f "go.mod" ] && [ "$dir" != "examples" ]; then
              echo "Creating temporary go.mod for $dir"
              go mod init github.com/go-fork/providers/$dir/example
              
              # Add references to local modules based on imports
              IMPORTS=$(grep -r "github.com/go-fork/providers/" --include="*.go" . | awk '{print $2}' | sort -u)
              
              for import in $IMPORTS; do
                # Extract the module name (first two path segments after the repo)
                if [[ $import =~ github.com/go-fork/providers/([^/]+)(/[^/]+)? ]]; then
                  MODULE=${BASH_REMATCH[1]}
                  if [ -d "../../$MODULE" ]; then
                    echo "replace github.com/go-fork/providers/$MODULE => ../../$MODULE" >> go.mod
                    echo "require github.com/go-fork/providers/$MODULE v0.0.0" >> go.mod
                  fi
                fi
              done
              
              go mod tidy
            fi
            
            # Try to build the example
            if ! go build -o /tmp/example .; then
              echo "Failed to compile example in $dir"
              exit 1
            else
              echo "Successfully compiled example in $dir"
            fi
            
            # If there are test_*.go files, run them
            if ls test_*.go 1> /dev/null 2>&1; then
              echo "Running tests in $dir"
              if ! go test -v ./...; then
                echo "Tests failed in $dir"
                exit 1
              fi
            fi
            
            # Return to root directory
            cd - > /dev/null
          done
      
      - name: Validate example code style
        run: |
          # Install gofmt
          go install golang.org/x/tools/cmd/goimports@latest
          
          # Find all Go files in examples
          EXAMPLE_FILES=$(find examples -name "*.go")
          
          # Check formatting
          for file in $EXAMPLE_FILES; do
            echo "Checking format of $file"
            if [ -n "$(goimports -l $file)" ]; then
              echo "File $file is not properly formatted"
              goimports -d $file
              exit 1
            fi
          done
      
      - name: Run selected examples
        run: |
          # Run specific examples that can be executed quickly
          cd examples
          
          # Find example directories with main.go
          MAIN_EXAMPLES=$(find . -name "main.go" | xargs dirname | sort)
          
          for example_dir in $MAIN_EXAMPLES; do
            # Skip examples that require manual interaction
            if [[ "$example_dir" == *"/interactive/"* ]]; then
              echo "Skipping interactive example $example_dir"
              continue
            fi
            
            # Skip examples that are potentially long-running
            if [[ "$example_dir" == *"/server/"* ]]; then
              echo "Skipping server example $example_dir"
              continue
            fi
            
            echo "Running example in $example_dir"
            cd "$example_dir"
            
            # Run with timeout to prevent hanging
            timeout 30s go run . || true
            
            cd - > /dev/null
          done
      
      - name: Generate examples documentation
        run: |
          mkdir -p examples-docs
          
          # Process each example directory
          find examples -type f -name "*.go" | xargs dirname | sort -u | while read -r example_dir; do
            # Skip if it's the root examples directory
            if [ "$example_dir" = "examples" ]; then
              continue
            fi
            
            # Extract category and name
            if [[ "$example_dir" =~ examples/([^/]+)(/([^/]+))? ]]; then
              category="${BASH_REMATCH[1]}"
              example_name="${BASH_REMATCH[3]}"
              
              if [ -z "$example_name" ]; then
                example_name="$category"
                category="basic"
              fi
              
              # Create directories
              mkdir -p "examples-docs/$category/$example_name"
              
              # Generate documentation for this example
              echo "# $example_name Example" > "examples-docs/$category/$example_name/README.md"
              echo "" >> "examples-docs/$category/$example_name/README.md"
              
              # Include description from README if available
              if [ -f "$example_dir/README.md" ]; then
                echo "## Description" >> "examples-docs/$category/$example_name/README.md"
                cat "$example_dir/README.md" | grep -v "^#" | head -20 >> "examples-docs/$category/$example_name/README.md"
                echo "" >> "examples-docs/$category/$example_name/README.md"
              fi
              
              # Add code listing
              echo "## Code" >> "examples-docs/$category/$example_name/README.md"
              echo "" >> "examples-docs/$category/$example_name/README.md"
              
              for go_file in $(find "$example_dir" -name "*.go" | sort); do
                file_name=$(basename "$go_file")
                echo "### $file_name" >> "examples-docs/$category/$example_name/README.md"
                echo "" >> "examples-docs/$category/$example_name/README.md"
                echo '```go' >> "examples-docs/$category/$example_name/README.md"
                cat "$go_file" >> "examples-docs/$category/$example_name/README.md"
                echo '```' >> "examples-docs/$category/$example_name/README.md"
                echo "" >> "examples-docs/$category/$example_name/README.md"
              done
            fi
          done
          
          # Create index file
          echo "# Go-Fork Providers Examples" > examples-docs/README.md
          echo "" >> examples-docs/README.md
          echo "This repository contains examples showing how to use the Go-Fork Providers packages." >> examples-docs/README.md
          echo "" >> examples-docs/README.md
          
          # Add categories
          for category in $(find examples-docs -mindepth 1 -maxdepth 1 -type d | xargs basename | sort); do
            echo "## $category" >> examples-docs/README.md
            echo "" >> examples-docs/README.md
            
            # Add examples in this category
            for example in $(find "examples-docs/$category" -mindepth 1 -maxdepth 1 -type d | xargs basename | sort); do
              echo "- [$example]($category/$example/)" >> examples-docs/README.md
            done
            
            echo "" >> examples-docs/README.md
          done
      
      - name: Upload examples documentation
        uses: actions/upload-artifact@v4
        with:
          name: examples-docs
          path: examples-docs/
