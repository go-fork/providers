name: Validate Examples

on:
  push:
    branches: [ main ]
    paths:
      - 'examples/**'
      - '**.go'
      - 'go.mod'
      - '.github/workflows/examples.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'examples/**'
      - '**.go'
      - 'go.mod'

jobs:
  validate-examples:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.x'
          cache: true
      
      - name: Install dependencies
        run: go mod download
      
      - name: Verify example structure
        run: |
          # Check that all example directories have README.md and main.go
          MISSING_FILES=0
          
          find examples -mindepth 2 -type d | while read -r example_dir; do
            if [ ! -f "$example_dir/README.md" ]; then
              echo "Missing README.md in $example_dir"
              MISSING_FILES=1
            fi
            
            if [ ! -f "$example_dir/main.go" ] && [ ! -f "$example_dir/example.go" ]; then
              echo "Missing main.go or example.go in $example_dir"
              MISSING_FILES=1
            fi
            
            # Check if there is at least one concept file
            if ! ls "$example_dir"/*concepts*.md 1> /dev/null 2>&1; then
              echo "Missing concepts documentation in $example_dir"
              MISSING_FILES=1
            fi
          done
          
          if [ $MISSING_FILES -eq 1 ]; then
            echo "ERROR: Some examples are missing required files"
            exit 1
          fi
      
      - name: Verify examples compile
        run: |
          # Compile all example code to make sure it builds
          COMPILE_ERRORS=0
          
          find examples -name "*.go" -not -path "*/vendor/*" | while read -r go_file; do
            dir=$(dirname "$go_file")
            cd "$dir" || continue
            
            echo "Compiling $go_file"
            if ! go build -o /dev/null; then
              echo "Failed to compile $go_file"
              COMPILE_ERRORS=1
            fi
            
            cd - > /dev/null || exit
          done
          
          if [ $COMPILE_ERRORS -eq 1 ]; then
            echo "ERROR: Some examples failed to compile"
            exit 1
          fi
      
      - name: Generate examples documentation
        if: github.event_name != 'pull_request'
        run: |
          mkdir -p examples-docs
          
          # Generate index
          cat > examples-docs/index.md << EOF
          # Go-Fork Providers Examples
          
          This documentation provides examples for using the go-fork/providers packages.
          
          ## Available Examples
          
          EOF
          
          # Process each example directory
          find examples -mindepth 2 -type d | sort | while read -r example_dir; do
            example_name=$(basename "$example_dir")
            category=$(basename "$(dirname "$example_dir")")
            
            # Create category section if needed
            if ! grep -q "### $category" examples-docs/index.md; then
              echo -e "\n### $category" >> examples-docs/index.md
            fi
            
            # Add example to index
            echo "- [$example_name]($category/$example_name/)" >> examples-docs/index.md
            
            # Create directory for example docs
            mkdir -p "examples-docs/$category/$example_name"
            
            # Copy README and concepts to docs
            cp "$example_dir/README.md" "examples-docs/$category/$example_name/index.md"
            
            # Copy all concept files
            find "$example_dir" -name "*concepts*.md" -exec cp {} "examples-docs/$category/$example_name/" \;
            
            # Create a source code page
            echo "# Source Code" > "examples-docs/$category/$example_name/source.md"
            
            # Add each source file
            find "$example_dir" -name "*.go" | sort | while read -r go_file; do
              file_name=$(basename "$go_file")
              echo -e "\n## $file_name\n" >> "examples-docs/$category/$example_name/source.md"
              echo '```go' >> "examples-docs/$category/$example_name/source.md"
              cat "$go_file" >> "examples-docs/$category/$example_name/source.md"
              echo '```' >> "examples-docs/$category/$example_name/source.md"
            done
          done
      
      - name: Commit and push examples documentation
        if: github.event_name != 'pull_request'
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          git add examples-docs/
          
          # Only commit if there are changes
          if git diff --staged --quiet; then
            echo "No changes to commit"
            exit 0
          fi
          
          git commit -m "docs: update examples documentation [skip ci]"
          git push
