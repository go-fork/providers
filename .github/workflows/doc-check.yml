name: Documentation Check

on:
  push:
    branches: [ main ]
    paths:
      - '**.go'
      - '**/doc.go'
      - '**/README.md'
  pull_request:
    branches: [ main ]
    paths:
      - '**.go'
      - '**/doc.go'
      - '**/README.md'

jobs:
  doc-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.x'
          cache: true
      
      - name: Install tools
        run: |
          go install github.com/client9/misspell/cmd/misspell@latest
          go install golang.org/x/tools/cmd/godoc@latest
      
      - name: Check spelling in documentation
        run: |
          misspell -error **/README.md **/doc.go
      
      - name: Verify all packages have doc.go files
        run: |
          MISSING_DOCS=0
          
          # Check for each directory with .go files
          for dir in $(find . -type f -name "*.go" -not -path "*/vendor/*" -not -path "*/.git/*" | xargs dirname | sort -u); do
            # Skip test directories and mocks
            if [[ $dir == *"_test"* || $dir == *"/mocks"* || $dir == *"mock"* ]]; then
              continue
            fi
            
            # Check if doc.go exists
            if [ ! -f "$dir/doc.go" ]; then
              echo "Missing doc.go in $dir"
              MISSING_DOCS=1
            fi
          done
          
          # Fail if any doc.go files are missing
          if [ $MISSING_DOCS -eq 1 ]; then
            echo "ERROR: Some packages are missing doc.go files"
            exit 1
          fi
      
      - name: Verify godoc quality
        run: |
          # Check all doc.go files for proper package documentation
          MISSING_PACKAGE_DOC=0
          
          for docfile in $(find . -name "doc.go" -not -path "*/vendor/*" -not -path "*/.git/*"); do
            # Check if the doc.go file has a package comment
            if ! grep -q "^// Package " "$docfile"; then
              echo "Missing proper package documentation in $docfile"
              MISSING_PACKAGE_DOC=1
            fi
          done
          
          if [ $MISSING_PACKAGE_DOC -eq 1 ]; then
            echo "ERROR: Some doc.go files are missing proper package documentation"
            exit 1
          fi
